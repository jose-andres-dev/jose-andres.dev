---
import "@fontsource/open-sans";

type Props = {
  pageTitle: string;
  pageDescription: string;
};

const { pageTitle, pageDescription } = Astro.props;

// Spacing
const layoutSpace = "18rem";

// Colors
const primaryColor = "#16232c"; // Dark one
const secondaryColor = "#C04A4A"; // Red one
const secondaryColorLighter = "#EB5C5C"; // Lighter red one
const thirdColor = "#FFF"; // White one

// Fonts
const fontSize5 = "6rem";
const fontSize4 = "4rem";
const fontSize3 = "3rem";
const fontSize2 = "2rem";
const fontSize1 = "1.5rem";

// Border Radius
const borderRadius = "1rem";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />

    <style
      is:global
      define:vars={{
        layoutSpace,
        primaryColor,
        secondaryColor,
        secondaryColorLighter,
        thirdColor,
        fontSize5,
        fontSize4,
        fontSize3,
        fontSize2,
        fontSize1,
        borderRadius,
      }}
    >
      * {
        color: var(--thirdColor);
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        margin: 0;
      }
    </style>

    <style>
      body {
        all: unset;
        min-height: 800px;
        height: 100vh;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto 1fr auto;
        grid-template-areas: "header" "main" "footer";
        background-color: var(--primaryColor);
        font-family: "Open Sans", sans-serif;
        overflow-x: hidden;
      }

      body > * {
        margin-left: auto;
        margin-right: auto;
      }

      header {
        grid-area: header;
        width: 100vw;
      }

      header > nav {
        padding-left: var(--layoutSpace);
        padding-right: var(--layoutSpace);
        padding-top: 1.5rem;
        padding-bottom: 1.5rem;
      }

      header > nav > ul {
        display: flex;
        justify-content: center;
        flex-direction: row;
        list-style-type: none;
        margin: 0;
        padding: 0;
        gap: 3rem;
        font-size: 2rem;
      }

      header a {
        color: var(--secondaryColor);
        text-decoration: none;
        font-weight: bolder;
      }

      header a:hover,
      header .is-active {
        text-decoration: underline;
        color: var(--secondaryColorLighter);
      }

      main {
        grid-area: main;
        width: 75rem;
        margin-top: 2rem;
        margin-bottom: 2rem;
      }
    </style>
  </head>
  <body>
    <header>
      <nav>
        <ul>
          <li>
            <a href="/">Jose Andr√©s</a>
          </li>
          <li>
            <a href="/blog">Blog</a>
          </li>
          <li>
            <a href="/about">About</a>
          </li>
        </ul>
      </nav>
    </header>

    <main>
      <slot />
    </main>

    <script>
      const currentPath = `/${location.pathname.split("/")[1]}`;

      const navLinkElements = document.querySelectorAll(
        "header > nav > ul > li > a"
      );
      navLinkElements.forEach((navLink) => {
        if (navLink.getAttribute("href") === currentPath) {
          navLink.classList.add("is-active");
        }
      });
    </script>
  </body>
</html>
